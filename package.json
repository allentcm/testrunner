{
  "name": "testrunner",
  "displayName": "TestRunner",
  "description": "Running test cases fast and furious",
  "version": "0.0.1",
  "publisher": "allentcm",
  "repository": {
    "type": "git",
    "url": "https://github.com/allentcm/testrunner.git"
  },
  "engines": {
    "vscode": "^1.71.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:testrunner.helloWorld",
    "onCommand:testrunner.runUnitTest"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "keybindings": [
      {
        "command": "testrunner.runUnitTest",
        "key": "ctrl+alt+t"
      }
    ],
    "commands": [
      {
        "command": "testrunner.helloWorld",
        "title": "Test Runner: Hello World"
      },
      {
        "command": "testrunner.runUnitTest",
        "title": "Test Runner: Run PHP Unit Test"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Test Runner configuration",
      "properties": {
        "testrunner.testSubdirectory": {
          "type": "string",
          "default": "tests/unit",
          "description": "Relative directory within workspace to store unit tests"
        },
        "testrunner.testClassTemplateFile": {
          "type": "string",
          "default": "templates/PHPUnitTestCase.php",
          "description": "If set, file (relative path in the workspace) to use as the test class template"
        },
        "testrunner.enableAutoRun": {
          "type": "boolean",
          "default": false,
          "description": "If true, unit tests are run automatically as text is edited"
        },
        "testrunner.enablePHPExtensions": {
          "type": "boolean",
          "default": false,
          "description": "If true, required JSON and tokenizer PHP modules are explicitly enabled (required if PHP is compiled without them embedded)"
        },
        "testrunner.commands.directory": {
          "type": "string",
          "default": "__WORKSPACE_DIRECTORY__",
          "description": "The directory unit test commands are run from"
        },
        "testrunner.commands.runUnitTest": {
          "type": "string",
          "default": "./vendor/bin/phpunit --testdox -c __TEST_SUBDIRECTORY__/phpunit.xml --filter __FUNCTION__ __TEST_SUBDIRECTORY__",
          "description": "The command to launch PHPUnit and run an individual unit test"
        },
        "testrunner.commands.runAllUnitTests": {
          "type": "string",
          "default": "./vendor/bin/phpunit --testdox -c __TEST_SUBDIRECTORY__/phpunit.xml __TEST_SUBDIRECTORY__",
          "description": "The command to launch PHPUnit to run all unit tests"
        },
        "testrunner.commands.runCodeCoverage": {
          "type": "string",
          "default": "./vendor/bin/phpunit --testdox -c __TEST_SUBDIRECTORY__/phpunit.coverage.xml __TEST_SUBDIRECTORY__",
          "description": "The command to launch PHPUnit to run all unit tests and generate code coverage"
        },
        "testrunner.commands.codeCoverageReport": {
          "type": "string",
          "default": "./__TEST_SUBDIRECTORY__/coverage/index.html",
          "description": "If set, this file will be displayed after running the code coverage command"
        },
        "testrunner.composer.enableInstall": {
          "type": "boolean",
          "default": true,
          "description": "If true, for a new project, Composer and PHPUnit will be added to composer.json"
        },
        "testrunner.composer.enableNamespace": {
          "type": "boolean",
          "default": true,
          "description": "If true, when a unit test is added to a class, its namespace will be added to composer.json"
        },
        "testrunner.composer.packagesRequired": {
          "type": "array",
          "default": [
            "composer/composer"
          ],
          "description": "If composer.install is true, the composer packages installed during project setup"
        },
        "testrunner.composer.packagesDevelopment": {
          "type": "array",
          "default": [
            "phpunit/phpunit:^7.1.5"
          ],
          "description": "If composer.install is true, the composer packages installed during project setup"
        },
        "testrunner.composer.commands.directory": {
          "type": "string",
          "default": "__WORKSPACE_DIRECTORY__",
          "description": "The directory composer commands are run from"
        },
        "testrunner.composer.commands.require": {
          "type": "string",
          "default": "composer require __FLAGS__ __PACKAGE__",
          "description": "The command used to execute a composer require"
        },
        "testrunner.composer.commands.update": {
          "type": "string",
          "default": "composer update",
          "description": "The command used to execute a composer update"
        },
        "testrunner.composer.commands.dumpAutoload": {
          "type": "string",
          "default": "composer dump-autoload",
          "description": "The command used to execute a composer dump-autoload"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./ && cp src/dump.php out/dump.php && cp -r src/templates out",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.1",
    "@types/node": "16.x",
    "@types/sinon": "^10.0.13",
    "@types/vscode": "^1.71.0",
    "@typescript-eslint/eslint-plugin": "^5.31.0",
    "@typescript-eslint/parser": "^5.31.0",
    "@vscode/test-electron": "^2.1.5",
    "eslint": "^8.20.0",
    "glob": "^8.0.3",
    "mocha": "^10.0.0",
    "sinon": "^10.0.0",
    "typescript": "^4.7.4"
  }
}
